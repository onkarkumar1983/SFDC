<apex:page extensions="CRMG_WF.WorkflowController" id="pg" standardController="CRMG_WF__Workflow__c" docType="html-5.0">
<apex:sectionHeader subtitle="New Workflow Rule" title="Workflow Rule"/>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/angularjs/1.0.8/angular.js"></script>
<script>  
     /*function getSobjects(callback){              
       Visualforce.remoting.Manager.invokeAction(  
         '{!$RemoteAction.WorkflowController.getObjectJson}',  
         callback,  
         {escape: false}  
       );        
     }  */
   </script> 
   
<script>
    /* var app = angular.module('myApp', []);
     app.factory('VFRemotingFactory',function($q,$rootScope){  
         var factory = {};  
         factory.getData = function(){  
             var deferred = $q.defer();  
              getSobjects(function(result){  
               $rootScope.$apply(function(){  
                 deferred.resolve(result);  
               });  
             });  
             return deferred.promise;  
         }  
         return factory;  
    }); 
    
    app.controller('autocompleteController', function($scope,VFRemotingFactory) {
        VFRemotingFactory.getData().then(function(result){  
             $scope.countries = eval(result);
             
        });
    });   */
</script>
<apex:form id="frm">

  <apex:pageMessage severity="info" rendered="{!!isCustomSeetingSetp}">
   <center> <p>  You are on your way to creating your first workflow, but note, there are 3 things that you must do first, in order for your Workflow actions to begin executing:</p></center>
    <ul>
    <li>1.  Create 1 Customer Setting: Go to Setup > Develop > Custom Settings > Click on “Manage” > click on “New” then enter this exact phrase “Workflow Global Setting”, then click on “Save”.</li>
    <li>2.  Start your Workflow Engine: Click on the + at the end of your Salesforce Tabs, then click on “Workflow Settings”, click here, then click on “Start Workflow”</li>
    <li>3.  If you plan you use “Create A New Record”, you will need to create or edit the “Field Set” on the Object for which you plan to create a new record. <a href="https://appexchange.salesforce.com/servlet/servlet.FileDownload?file=00P3000000KqPNwEAN">Click here:</a>  then go to page 21 to learn how to edit or create a field set.  Be sure to add all of the REQUIRED fields to your field set.</li>
</ul>
  </apex:pageMessage>  
 
  <!--<apex:pageMessage summary="Oops, you forgot to select your Object. Please select an Object, then click on Next." severity="error" strength="3" id="err" rendered="{!ISNULL(selectedSObject)}"/>-->
<apex:pageMessage severity="ERROR" summary="Please Select Object" rendered="{!ISNULL(selectedSObject)}"></apex:pageMessage>
<apex:pageBlock title="Step1: Select Object" id="pb">
    <apex:pageBlockButtons style="float:right;">
        <apex:commandButton action="{!nextToStep2}" value="Next"/> 
        <apex:commandButton action="{!cancel}" value="Cancel"/>
    </apex:pageBlockButtons>    
    <apex:pageBlockSection columns="1">
        <apex:outputLabel escape="false" value="Select the object for which this workflow rule will apply." /> 
        <apex:pageBlockSectionItem >
            <apex:outputLabel escape="false" value="Object" />
            <apex:outputPanel >
            <div class="requiredInput" ng-app="myApp"  ng-controller="autocompleteController">
                <div class="requiredBlock"></div>
                 <apex:selectList value="{!selectedSObject}" multiselect="false" size="1"  style="{!if(ISNULL(selectedSObject),'border:3px solid #c00','')}">
                      <apex:selectOptions value="{!objects}"/>
                  </apex:selectList>
                 
                   
                 <!-- <apex:inputText html-ng-model="selectedCountries" html-placeholder="Search Countries" html-typeahead="c as c.country for c in countries"/> -->
            </div>
        </apex:outputPanel>
        </apex:pageBlockSectionItem>
    </apex:pageBlockSection>
    
    </apex:pageBlock>
    
</apex:form>
</apex:page>